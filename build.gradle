plugins {
	id 'org.springframework.boot' version '2.5.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.LKS'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2', 'io.jsonwebtoken:jjwt-jackson:0.11.2'
	implementation("com.google.guava:guava:30.1.1-jre")
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.5'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.5.4'
	implementation 'org.springframework.boot:spring-boot-starter-security:2.5.4'
	implementation 'org.springframework.boot:spring-boot-starter-web:2.5.4'
	compileOnly 'org.projectlombok:lombok:1.18.20'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:2.7.3' // MariaDB
	annotationProcessor 'org.projectlombok:lombok:1.18.20'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.4'
	testImplementation 'org.springframework.security:spring-security-test:5.5.1'
}

def webappDir = "$projectDir/front"

sourceSets{
	main{
		resources {
			srcDirs = ["$webappDir/build", "$projectDir/src/main/resources"]
		}
	}
}

processResources{
	dependsOn "buildReact"
}

task buildReact(type:Exec){
	dependsOn "installReact"
	workingDir "$webappDir"
	inputs.dir "$webappDir"
	group = BasePlugin.BUILD_GROUP
	if(System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')){
		commandLine "npm.cmd", "run-script", "build"
	} else{
		commandLine "npm", "run-script", "build"
	}
}

task installReact(type:Exec) {
	workingDir "$webappDir"
	inputs.dir "$webappDir"
	group = BasePlugin.BUILD_GROUP
	if(System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')){
		commandLine "npm.cmd", "audit", "fix"
		commandLine "npm.cmd", "install"
	} else{
		commandLine "npm", "audit", "fix"
		commandLine "npm", "install"
	}
}

test {
	useJUnitPlatform()
}
